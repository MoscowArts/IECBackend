services:
  iecbackend.api:
    image: iecbackend.api
    build:
      context: .
      dockerfile: IECBackend.Api/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      RESTART: always
    ports:
      - "8080:8080"
    networks:
      - backend
    depends_on:
      database:
        condition: service_healthy    
    
  database:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'password'
      POSTGRES_DB: 'iec'
    networks:
      - backend
    ports:
      - "50000:5432"
    volumes:
      - postgres_database:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
      
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - iecbackend.api
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  postgres_database: